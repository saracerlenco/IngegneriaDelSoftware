openapi: 3.0.0
info:
  title: "DiscoverTrento API"
  description: "documentazione API per la webapp DiscoverTrento"
  version: "1.0"

#IMPORTANTE! DOBBIAMO SOSTITUIRE I SERVER CON I NOSTRI
servers:
  - url: http://localhost:3000/api/v1
    description: Localhost

components:
  securitySchemes:
    TokenAutenticazione:
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"
      description: "Token fornito all'utente all'atto del login necessario per accedere alle risorse riservate"
    

paths:

# session per gestire LOGIN (post) e LOGOUT (delete) degli utenti
  /sessions:
    post:
      summary: "Autenticazione utente tramite credenziali locali"
      description: "L'utente può autenticarsi immettendo email e password"
      tags: 
        - "session"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                email:
                  type: "string"
                  description: "Email utente"
                  example: "Pippo@gmail.com"
                password:
                  type: "string"
                  description: "Password associata all'account"
                  example: "PasswordDiPippo123F"
                ruolo:
                  enum: ["cittadino", "azienda", "operatore_comunale"]
                  description: "Ruolo dell'utente - cittadino, azienda o operatore_comunale"
                  example: "cittadino"
      responses:
        "200":
          description: "L'autenticazione tramite credenziali locali è avvenuta con successo"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message:
                    type: "string"
                    example: "Token creato con successo"
                  token:
                    type: "string"
                    description: "Token JWT da utilizzare per autenticare richieste future"
                    example: "kjcn3u94eniuqxnie9denind"
                  email:
                    type: "string"
                    example: "pippo@gmail.com"
                  id:
                    type: "string"
                    description: "ID dell'utente autenticato"
                    example: "60d0fe4f5311236168a109ca"
                  self:
                    type: "string"
                    description: "Endpoint risorsa utente"
                    example: "/api/v1/cittadinos"
        "401":
          description: "Credenziali non valide"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Credenziali non valide"
        "404":
          description: "Credenziali non valide"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                    example: false
                  error:
                    type: "string"
                    example: "Utente non trovato"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
    delete:
      summary: "Logout utente"
      description: "Invalidazione del token di autenticazione dell'utente"
      tags: 
        - "session"
      security:
        - TokenAutenticazione: []  
      responses:
        "204":
          description: "Logout effettuato con successo"
        "400":
          description: "Token mancante"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Token mancante"
        "401":
          description: "Errore: token non valido o mancante"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Token non valido"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"  

# 3 tipi di utenti con registrazione (post), visualizzazione (get) e modifica (put/patch) dell'area personale
  /cittadini: 
    post:
      summary: "Registrazione utente cittadino"
      description: "Registrazione dell'utente con richiesta di parametri specifici per il cittadino"
      tags: 
        - "cittadino"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                nome:
                  type: "string"
                cognome:
                  type: "string"
                email:
                  type: "string"
                codice_fiscale:
                  type: "string"
                username:
                  type: "string"
                password:
                  type: "string"
                punti:
                  type: "integer"
                  default: 0
              required: ["nome", "cognome", "email", "codice_fiscale", "username", "password"]
      responses:
        "201":
          description: "Registrazione dell'utente cittadino avvenuta con successo"
        "400":
          description: "Richiesta non valida: dati mancanti o non validi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Richiesta non valida"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
    get:
      summary: "Area personale dell'utente cittadino"
      description: "Permette all'utente cittadino di visualizzare i dati della propria area personale"
      tags: 
        - "cittadino"
      security:
        - TokenAutenticazione: []       
      responses:
        "200":
          description: "Dati personali dell'utente cittadino"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  self:
                    type: string
                    example: "/api/v1/cittadini"
                  nome:
                    type: "string"
                  cognome:
                    type: "string"
                  email:
                    type: "string"
                  codice_fiscale:
                    type: "string"
                  username:
                    type: "string"
                  punti:
                    type: "integer"

        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
    put:
      summary: "Modifica dati personali"
      description: "Permette all'utente cittadino di modificare i propri dati dell'area personale"
      tags: 
        - "cittadino"
      security:
        - TokenAutenticazione: []       
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                nome:
                  type: string
                cognome:
                  type: string
                codice_fiscale:
                  type: string
                username:
                  type: string
                email:
                  type: string
                punti:
                  type: integer
      responses:
        "200":
          description: "Dati modificati con successo"
        "400":
          description: "Richiesta non valida: dati mancanti o non validi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Richiesta non valida"
        "404":
          description: "Cittadino non trovato"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Cittadino non trovato"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
  /cittadini/all:
    get:
      summary: "Lista di tutti i cittadini"
      description: "Restituisce l'elenco di tutti gli utenti registrati come cittadini"
      tags:
        - "cittadino"
      security:
        - TokenAutenticazione: []
      responses:
        "200":
          description: "Lista di cittadini recuperata con successo"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    self:
                      type: string
                      example: "/api/v1/cittadini/all"
                    _id:
                      type: string
                      description: "ID univoco del cittadino"
                      example: "664dc792abf1e2043e90b0f1"
                    username:
                      type: string
                      description: "Username del cittadino"
                      example: "mario_rossi"
        "500":
          description: "Errore interno del server"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Errore del server, riprova più tardi"


  /operatori_comunali: 
    post:
      summary: "Registrazione utente operatore comunale"
      description: "Registrazione dell'utente con richiesta di parametri specifici per l'operatore comunale"
      tags: 
        - "operatore_comunale"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              title: "operatore_comunale"
              description: "Parametri per l'utente operatore comunale"
              properties:
                nome:
                  type: "string"
                cognome:
                  type: "string"
                email:
                  type: "string"
                codice_fiscale:
                  type: "string"
                password:
                  type: "string"
              required: ["nome", "cognome", "email", "codice_fiscale", "password"]
      responses:
        "201":
          description: "Registrazione dell'utente operatore comunale avvenuta con successo"
        "400":
          description: "Richiesta non valida: dati mancanti o non validi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Richiesta non valida"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
    get:
      summary: "Area personale dell'utente operatore comunale"
      description: "Permette all'utente operatore comunale di visualizzare i dati della propria area personale"
      tags: 
        - "operatore_comunale"
      security:
        - TokenAutenticazione: []      
      responses:
        "200":
          description: "Dati personali dell'utente operatore comunale"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  self:
                    type: string
                    example: "/api/v1/operatori_comunali"
                  nome:
                    type: string
                    example: "Luca"
                  cognome:
                    type: string
                    example: "Verdi"
                  email:
                    type: string
                    example: "luca.verdi@gmail.it"
                  codice_fiscale:
                    type: string
                    example: "VRDLUC80A01H501X"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
    put:
      summary: "Modifica dati personali"
      description: "Permette all'utente operatore comunale di modificare i propri dati dell'area personale"
      tags: 
        - "operatore_comunale"
      security:
        - TokenAutenticazione: []       
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome_operatore_comunale:
                  type: string
                cognome_operatore_comunale:
                  type: string
                codice_fiscale:
                  type: string
                email:
                  type: string
      responses:
        "200":
          description: "Dati modificati con successo"
        "400":
          description: "Richiesta non valida: dati mancanti o non validi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Richiesta non valida"
        "404":
          description: "Operatore non trovato"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Operatore non trovato"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"

  /aziende: 
    post: 
      summary: "Registrazione utente azienda"
      description: "Registrazione dell'utente con richiesta di parametri specifici per l'azienda"
      tags: 
        - "azienda"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              title: "azienda"
              description: "Parametri per l'utente azienda"
              properties:
                nome:
                  type: "string"
                partita_IVA:
                  type: "string"
                email:
                  type: "string"
                password:
                  type: "string"
              required: ["nome", "partita_IVA", "email", "password"]
      responses:
        "201":
          description: "Registrazione dell'utente azienda avvenuta con successo"
        "400":
          description: "Richiesta non valida: dati mancanti o non validi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Richiesta non valida"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
    get:
      summary: "Area personale dell'utente azienda"
      description: "Permette all'utente azienda di visualizzare i dati della propria area personale"
      tags: 
        - "azienda"
      security:
        - TokenAutenticazione: []       
      responses:
        "200":
          description: "Dati personali dell'utente azienda"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  self:
                    type: string
                    example: "/api/v1/aziende"
                  nome:
                    type: string
                    example: "Azienda Trento"
                  partita_IVA:
                    type: string
                    example: "01234567890"
                  email:
                    type: string
                    example: "azienda@trento.it"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
    put:
      summary: "Modifica dati personali"
      description: "Permette all'utente azienda di modificare i propri dati dell'area personale"
      tags: 
        - "azienda"
      security:
        - TokenAutenticazione: []       
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                nome:
                  type: "string"
                partita_IVA:
                  type: "string"
                email:
                  type: "string"
      responses:
        "200":
          description: "Dati modificati con successo"
        "400":
          description: "Richiesta non valida: dati mancanti o non validi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Richiesta non valida"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"


  #gestione eventi
  /eventi:
    get:
      summary: "Lista degli eventi"
      description: "Restituisce la lista degli eventi, filtrabili per tipologia o data"
      tags: 
        - "evento"
      parameters:
        - name: "tipologia"
          in: "query"
          schema:
            enum: ["sportivo", "culturale", "volontariato"]
          description: "Tipologia dell'evento"
          example: "sportivo"
        - name: "data"
          in: "query"
          schema:
            type: "string"
            format: "date"
          description: "Data dell'evento (formato: YYYY-MM-DD)"
        - name: "luogo"
          in: "query"
          schema:
            type: "string"
          description: "Luogo dell'evento"
          example: "Piazza Duomo"
        - name: "futuri"
          in: "query"
          schema:
            type: "string"
            enum: ["true"]
          description: "Se impostato a true, restituisce solo eventi futuri"
      responses:
        "200":
          description: "Lista degli eventi"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    self:
                      type: string
                      example: "/api/v1/eventi"
                    id_evento:
                      type: "string"
                    nome_evento:
                      type: "string"
                    data:
                      type: "string"
                      format: "date"
                    luogo:
                      type: "string"
                    tipologia:
                      enum: ["sportivo", "culturale", "volontariato"]
                    descrizione:
                      type: "string"
                    punti:
                      type: "integer"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
    post:
      summary: "Proposta evento"
      description: "Consente a cittadino e operatore comunale di proporre un evento, specificandone i dettagli, luogo e data"
      tags: 
        - "evento"
      security:
        - TokenAutenticazione: []       
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                nome_evento:
                  type: "string"
                data:
                  type: "string"
                  format: "date"
                luogo:
                  type: "string"
                tipologia:
                  enum: ["sportivo", "culturale", "volontariato"]
                descrizione:
                  type: "string"
                punti:
                  type: "integer"
                  description: "Considerato solo nel caso in cui sia l'utente operatore_comunale a creare l'evento"
              required: ["nome_evento", "data", "luogo", "tipologia"]
      responses:
        "201":
          description: "La creazione dell'evento è avvenuta con successo"
        "400":
          description: "Richiesta non valida: dati mancanti o non validi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Richiesta non valida"
        "403":   # se l'utente azienda prova a proporre un evento
          description: "Forbidden: la tipologia di utente non permette la proposta di eventi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Azione non permessa"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"

  /eventi/filtri:
    get:
      summary: "Filtri disponibili per gli eventi"
      description: "Restituisce le tipologie e i luoghi disponibili per filtrare gli eventi"
      tags:
        - "evento"
      responses:
        "200":
          description: "Filtri disponibili"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  tipologie:
                    type: "array"
                    items:
                      type: "string"
                  luoghi:
                    type: "array"
                    items:
                      type: "string"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"

  /eventi/:id_evento:
    put: 
      summary: "Assegnazione punti ad un evento"
      description: "Permette all'utente operatore_comunale di assegnare un punteggio ad un evento"
      tags:
        - "evento"
      security:
        - TokenAutenticazione: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                punti:
                  type: "integer"
                  description: "Punteggio assegnato al coupon"
              required: [ "punti"]
      responses:
        "200":
          description: "Il punteggio è stato assegnato all'evento dal comune con successo"
        "400":
          description: "Richiesta non valida: dati mancanti o non validi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Richiesta non valida"
        "403":  
          description: "Forbidden: la tipologia di utente non permette la proposta di coupon"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Azione non permessa"
        "404":
          description: "Evento non trovato"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Evento non trovato"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"


  /partecipazioni:
    get:
      summary: "Partecipazioni agli eventi"
      description: "Permette all'utente cittadino che ha effettuato il login di visualizzare la propria to-attend-list"
      tags: 
        - "partecipazione"
      security:
        - TokenAutenticazione: []
      responses:
        "200":
          description: "Lista degli eventi"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    self:
                      type: string
                      example: "/api/v1/partecipazioni"
                    id_partecipazione:
                      type: "string"
                    id_evento:
                      type: "string"
                    id_cittadino:
                      type: "string"
        "403":  
          description: "Forbidden: la tipologia di utente non permette la visualizzazione della partecipazione agli eventi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Azione non permessa"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"

  
  /partecipazioni/{id_evento}:
    parameters:
      - name: id_evento
        in: path
        required: true
        schema:
          type: string
    post:
      summary: "Partecipazione ad un evento"
      description: "Permette all'utente cittadino che ha effettuato il login di segnare la propria partecipazione ad un evento, visualizzandolo poi aggiunto alla propria to-attend-list"
      tags: 
        - "partecipazione"
      security:
        - TokenAutenticazione: []
      responses:
        "201":
          description: "Partecipazione all'evento segnata con successo"
        "403":  
          description: "Forbidden: la tipologia di utente non permette la partecipazione agli eventi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Azione non permessa"
        "404":
          description: "Evento non trovato"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Evento non trovato"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
    delete:
      summary: "Cancellazione partecipazione"
      description: "Permette di annullare la partecipazione di un cittadino ad un evento"
      tags: 
        - "partecipazione"
      security:
        - TokenAutenticazione: []       
      responses:
        "204":
          description: "La partecipazione è stata annullata con successo"
        "403":
          description: "Utente non autorizzato"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Token mancante"
        
        "404":
          description: "Evento o partecipazione inesistente"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
              examples:
                evento_inesistente:
                  summary: "Evento inesistente"
                  value:
                    error: "Evento inesistente"
                partecipazione_inesistente:
                  summary: "Partecipazione inesistente"
                  value:
                    error: "Errore: partecipazione inesistente"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"

  /sponsorizzazioni:
    get:
      summary: "Sponsorizzazione degli eventi"
      description: "Permette all'utente azienda che ha effettuato il login di visualizzare gli eventi che sponsorizza"
      tags: 
        - "sponsorizzazione"
      security:
        - TokenAutenticazione: []
      responses:
        "200":
          description: "Lista degli eventi"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    self:
                      type : "string"
                      example: "/api/v1/sponsorizzazioni/123"
                    id_sponsorizzazione:
                      type: "string"
                    id_evento:
                      type: "string"
                    id_azienda:
                      type: "string"
        "403":  
          description: "Forbidden: la tipologia di utente non permette la visualizzazione delle sponsorizzazioni degli eventi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Azione non permessa"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"


  /sponsorizzazioni/:id_evento:
    parameters:
      - name: "id_evento"
        in: "path"
        schema:
          type: "string"
        required: true
    post:
      summary: "Sponsorizzazione di un evento"
      description: "Permette all'utente azienda che ha effettuato il login di segnare la propria sponsorizzazione ad un evento, visualizzandolo poi aggiunto alla propria to-sponsor-list"
      tags: 
        - "sponsorizzazione"
      security:
        - TokenAutenticazione: []       
      responses:
        "201":
          description: "Sponsorizzazione dell'evento assegnata con successo"
        "403":  
          description: "Forbidden: la tipologia di utente non permette la sponsorizzazione di eventi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Azione non permessa"
        "404":
          description: "Evento non trovato"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Evento non trovato"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
    delete:
      summary: "Cancellazione sponsorizzazione"
      description: "Permette all'azienda di annullare la sponsorizzazione di un evento"
      tags: 
        - "sponsorizzazione"
      security:
        - TokenAutenticazione: []       
      responses:
        "204":
          description: "La sponsorizzazione è stata annullata con successo"
        "404":
          description: "Errore: sponsorizzazione non trovata"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
              examples:
                evento_inesistente:
                  summary: "Evento inesistente"
                  value:
                    error: "Evento inesistente"
                sponsorizzazione_inesistente:
                  summary: "Sponsorizzazione inesistente"
                  value:
                    error: "Errore: sponsorizzazione inesistente"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"


  #gestione feedback 
  /feedbacks:
    get:
      summary: "Lista completa dei feedback"
      description: "Restituisce la lista completa dei feedback individuali registrati dagli utenti"
      tags: 
        - "feedback"
      security:
        - TokenAutenticazione: []       
      responses:
        "200":
          description: "Recupero con successo"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    self:
                      type: string
                      example: "/api/v1/feedbacks/67890"
                    id_cittadino:
                      type: string
                      example: "abc123"
                    rating:
                      type: integer
                      example: 5
                    commento:
                      type: string
                      example: "Evento ben organizzato"
        "403":  
          description: "Forbidden: la tipologia di utente non permette la visualizzazione della media dei feedback"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Azione non permessa"
        "404":
          description: "Evento non trovato"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Evento non trovato"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"

  /feedbacks/:id_evento:
    parameters:
    - name: "id_evento"
      in: "path"
      schema:
        type: "string"
      required: true
    post:
      summary: "Lascia feedback evento"
      description: "Permette ai cittadini che hanno partecipato ad un evento di lasciare feedback e commenti allo stesso"
      tags: 
        - "feedback"
      security:
        - TokenAutenticazione: []       
      parameters:
        - name: "id_evento"
          in: "path"
          required: true
          schema:
            type: "string"
          description: "ID dell'evento"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                commento:
                  type: "string"
                  example: "Evento ben organizzato"
                rating:
                  type: "integer"
                  example: 5
              required: ["rating"]
      responses:
        "201":
          description: "Feedback registrato"
        "400":
          description: "Richiesta non valida: dati mancanti o non validi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Richiesta non valida"
        "403":  
          description: "Utente non autorizzato"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Azione non permessa"
        "404":
          description: "Evento non trovato"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Evento non trovato"
        "409":
          description: "Feedback già lasciato per questo evento"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Hai già lasciato un feedback per questo evento."
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi!"
    get:
      summary: "Recensioni eventi"
      description: "Restituisce una lista di commenti lasciati dai partecipanti relativi ad un evento passato"
      tags: 
        - "feedback"
      security:
        - TokenAutenticazione: []       
      responses:
        "200":
          description: "Recupero con successo"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    self:
                      type: "string"
                      example: "/api/v1/feedbacks/67890"
                    id_cittadino:
                      type: "string"
                    rating:
                      type: integer
                      description: "Valutazione da 1 a 5 assegnata all'evento"
                      example: 4
                    commento:
                      type: "string"
                      example: "Evento ben organizzato"
        "403":  
          description: "Forbidden: la tipologia di utente non permette la visualizzazione dei commenti relativi ad un evento"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Azione non permessa"
        "404":
          description: "Evento non trovato"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Evento non trovato"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"

#gestione coupon
  /coupons:
    post:
      summary: "Offri coupon"
      description: "Permette alle aziende di proporre coupon e sconti - poi dovranno essere approvati e convertiti in punti dal comune"
      tags: 
        - "coupon"
      security:
        - TokenAutenticazione: [] 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                descrizione_coupon:
                  type: "string"
              required: ["descrizione_coupon"]
      responses:
        "201":
          description: "Proposta di coupon al comune avvenuta con successo"
        "400":
          description: "Richiesta non valida: dati mancanti o non validi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Richiesta non valida"
        "403":   # se un utente che non è un'azienda prova a proporre un coupon
          description: "Forbidden: la tipologia di utente non permette la proposta di coupon"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Azione non permessa"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
    get:
      summary: "Lista dei coupon"
      description: "Restituisce la lista dei coupon offerti dalle aziende"
      tags: 
        - "coupon"
      security:
        - TokenAutenticazione: []      
      responses:
        "200":
          description: "Lista dei coupon"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    self:
                      type: "string"
                      example: "api/v1/coupons"
                    id_coupon:
                      type: "string"
                    id_azienda:
                      type: "string"
                    descrizione_coupon:
                      type: "string"
                    punti:
                      type: "integer"
        "403":  
          description: "Forbidden: l'utente deve essere registrato per poter vedere i coupon disponibili'"  
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Azione non permessa"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
  /coupons/:id_coupon:  
    parameters:
    - name: "id_coupon"
      in: "path"
      required: true
      schema:
        type: "string"
      description: "ID del coupon"
    put: 
      summary: "Approva coupon e associa punti"
      description: "Permette all'operatore comunale di approvare i coupon e associargli un punteggio"
      tags: 
        - "coupon"
      security:
        - TokenAutenticazione: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                punti:
                  type: "integer"
      responses:
        "200":
          description: "Il coupon è stato approvato dal comune con successo e gli è stato assegnato un punteggio"
        "400":
          description: "Richiesta non valida: dati mancanti o non validi"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Richiesta non valida"
        "403":  
          description: "Forbidden: la tipologia di utente non permette la proposta di coupon"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Azione non permessa"
        "404":
          description: "Coupon non trovato"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Coupon non trovato"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
                  
  /coupons_cittadino:
    get:
      summary: "Lista dei coupon del cittadino"
      description: "Restituisce la lista dei coupon offerti dalle aziende che il cittadino ha ottenuto convertendo i punti guadagnati"
      tags: 
        - "coupons_cittadino"
      security:
        - TokenAutenticazione: []      
      responses:
        "200":
          description: "Lista dei coupon del cittadino"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    self:
                      type: string
                      example: "/api/v1/coupons_cittadino/67890"
                    id_cittadino:
                      type: string
                      example: "abc123"
                    id_coupon:
                      type: string
                      example: "xyz789"
        "403":  
          description: "Forbidden: la tipologia di utente non permette la proposta di coupon"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Azione non permessa"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi"
  /coupons_cittadino/:id_coupon:
    post:
      summary: "Aggiungi coupon alla lista dei coupon del cittadino"
      description: "Permette ai cittadini di convertire i propri punti in coupon"
      tags: 
        - "coupons_cittadino"
      security:
        - TokenAutenticazione: []       
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                id_coupon:
                  type: "string"
                  example: "1234"
      responses:
        "201":
          description: "Coupon aggiunto alla lista dei coupon del cittadino"
        "403":  
          description: "Forbidden: la tipologia di utente non permette la proposta di coupon"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Azione non permessa"
        "404":
          description: "Errore: coupon non trovato"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Coupon non trovato"
        "500":
          description: "Errore del server"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Errore del server, riprova più tardi!"